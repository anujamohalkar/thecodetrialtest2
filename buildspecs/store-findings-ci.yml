version: 0.2
run-as: root
phases:
  pre_build:
    commands:
      - |
        PAYLOAD=$(echo -n "{\"executionId\": \"$CODEPIPELINE_EXECUTION_ID\"}" | base64)
      - aws lambda invoke --function-name ${ProjectName}-GenerateScanNameCI --payload "$PAYLOAD" response.json
      - SCAN_NAME=$(cat response.json | jq -r '.scan_name')
      - echo "timestamp=$SCAN_NAME"
      - export AWSAccountId=$(aws sts get-caller-identity --query Account --output text)
      - aws s3 cp s3://$RESULTS_BUCKET/securitytoolsparser-CD/securitytoolsparser/ $(pwd)/securitytoolsparser/ --recursive
      - aws s3 cp s3://$RESULTS_BUCKET/secureline-output/${GitHubRepo}/$SCAN_NAME/SoftwareCompositionAnalysisResults/ $HOME/secureline-output/ --recursive
      - aws s3 cp s3://$RESULTS_BUCKET/secureline-output/${GitHubRepo}/$SCAN_NAME/CISComplianceScanResults/ $HOME/secureline-output/ --recursive
      - aws s3 cp s3://$RESULTS_BUCKET/secureline-output/${GitHubRepo}/$SCAN_NAME/SecretScanResults/ $HOME/secureline-output/ --recursive
      - aws s3 cp s3://$RESULTS_BUCKET/secureline-output/${GitHubRepo}/$SCAN_NAME/ContainerImageVulnerabilityScanResults/ $HOME/secureline-output/ --recursive
      - aws s3 cp s3://$RESULTS_BUCKET/secureline-output/${GitHubRepo}/$SCAN_NAME/ContainerMisconfigScanResults/ $HOME/secureline-output/ --recursive
      - aws s3 cp s3://$RESULTS_BUCKET/secureline-output/${GitHubRepo}/$SCAN_NAME/StaticKubescapeResults/ $HOME/secureline-output/ --recursive
      - sudo apt install postgresql-client jq -y                      
      - |
        export POSTGRES_PORT=5432
        export POSTGRES_DBNAME="testing"
        export POSTGRES_HOST=$(aws ssm get-parameter --name /devsecops/POSTGRES_HOST --with-decryption --query "Parameter.Value" --output text)
        export POSTGRES_USER=$(aws ssm get-parameter --name /devsecops/POSTGRES_USER --with-decryption --query "Parameter.Value" --output text)
        export POSTGRES_PASSWORD=$(aws ssm get-parameter --name /devsecops/POSTGRES_PASSWORD --with-decryption --query "Parameter.Value" --output text)
        echo $POSTGRES_PASSWORD
      - |
        jq --arg user "$POSTGRES_USER" \
           --arg pass "$POSTGRES_PASSWORD" \
           --arg host "$POSTGRES_HOST" \
           --arg port "$POSTGRES_PORT" \
           --arg dbname "$POSTGRES_DBNAME" \
           '.pg_conn_params.user = $user |
            .pg_conn_params.password = $pass |
            .pg_conn_params.host = $host |
            .pg_conn_params.port = ($port | tonumber) |
            .pg_conn_params.dbname = $dbname' $(pwd)/securitytoolsparser/config.json > updated_config.json
      - mv updated_config.json $(pwd)/securitytoolsparser/config.json
      - cat $(pwd)/securitytoolsparser/config.json
      - SonarqubeUserToken=$(aws ssm get-parameter --name /devsecops/SONARQUBE_USER_TOKEN  --query "Parameter.Value" --output text)
      - ProjectKey=$(aws ssm get-parameter --name /devsecops/SONARQUBE_PROJECT_KEY  --query "Parameter.Value" --output text)
      - SonarQubeHost=$(aws ssm get-parameter --name /devsecops/SONARQUBE_HOST  --query "Parameter.Value" --output text)
  build:
    commands:
      - cd $(pwd)/securitytoolsparser/
      - pip install -r requirements.txt
      - export PYTHONPATH=/root/.pyenv/versions/3.9.17/lib/python3.9/site-packages
      - PGPASSWORD="$POSTGRES_PASSWORD" psql -h $POSTGRES_HOST -U $POSTGRES_USER -d $POSTGRES_DBNAME -p $POSTGRES_PORT -f securitytoolparser.sql
      - python3 insert_excel.py
        #      - ScanName=CI_${GitHubBranch}_$(date +'%Y%m%d-%H%M')
      - ScanName=$SCAN_NAME
      - ls -lhtr $HOME/secureline-output
      - python3 run_parser.py -t "Trufflehog3 Scan" -p "$HOME/secureline-output/trufflehog_output.json" -m ${GitHubRepo} -A ${AppName} -B ${GitHubBranch} -bn "$ScanName"
      - python3 run_parser.py -t "Dependency Check Scan" -p "$HOME/secureline-output/dependency-check-report.xml" -m ${GitHubRepo} -A ${AppName} -B ${GitHubBranch} -bn "$ScanName"
      - python3 run_parser.py -t  "TrivyMisconfig" -p "$HOME/secureline-output/Trivy_Misconfig_result.json" -m ${GitHubRepo} -A ${AppName} -B ${GitHubBranch} -bn "$ScanName"
      - python3 run_parser.py -t  "Trivy Scan" -p "$HOME/secureline-output/Trivy_Image_result.json" -m ${GitHubRepo} -A ${AppName} -B ${GitHubBranch} -bn "$ScanName"
      - python3 run_parser.py -t  "Trivy CIS Scan" -p "$HOME/secureline-output/TrivyCIS-172.31.47.131-UBUNTU.json" -m ${GitHubRepo} -A ${AppName} -B ${GitHubBranch} -bn "$ScanName"
      - python3 run_parser.py -t  "Kubescape Scanning_CI" -p "$HOME/secureline-output/kubescape-results.xml" -m ${GitHubRepo} -A ${AppName} -B ${GitHubBranch} -bn "$ScanName"
      - python3 run_parser.py -t "sonarqube" -u ${SonarQubeHost} -k ${ProjectKey} -b ${GitHubBranch} -a ${SonarqubeUserToken} -m ${GitHubRepo} -A ${AppName} -B ${GitHubBranch} -bn "$ScanName"
      
      
