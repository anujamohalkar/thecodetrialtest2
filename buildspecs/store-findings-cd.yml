version: 0.2
run-as: root
phases:
  pre_build:
    commands:
      - export AWSAccountId=$(aws sts get-caller-identity --query Account --output text)
      - |
        PAYLOAD=$(echo -n "{\"executionId\": \"$CODEPIPELINE_EXECUTION_ID\"}" | base64)
      - aws lambda invoke --function-name ${ProjectName}-GenerateScanNameCD --payload "$PAYLOAD" response.json
      - SCAN_NAME=$(cat response.json | jq -r '.scan_name')
      - echo "timestamp=$SCAN_NAME"
      - aws s3 cp s3://$ARTIFACT_BUCKET/securitytoolsparser-CD/securitytoolsparser/ $(pwd)/securitytoolsparser/ --recursive
      - aws s3 cp s3://$ARTIFACT_BUCKET/secureline-output/${GitHubRepo}/$SCAN_NAME/DynamicKubescapeResults/ $HOME/secureline-output/ --recursive
      - aws s3 cp s3://$ARTIFACT_BUCKET/secureline-output/${GitHubRepo}/$SCAN_NAME/ProwlerResults/ $HOME/secureline-output/ --recursive
        # - aws s3 sync s3://$ARTIFACT_BUCKET/secureline-output/${GitHubRepo}/$SCAN_NAME/CloudSecurityScanResults/AWS/aws_audit/$AWSAccountId/ $HOME/secureline-output/CloudSecurityScanResults/ --exclude "*" --include "*/final_report/final_json"
        #- export LATEST_DIR=$(ls -d $HOME/secureline-output/CloudSecurityScanResults/*/ | sort -r | head -n 1)
        #- export LATEST_FILE="$LATEST_DIR/final_report/final_json"
        #- mv $LATEST_FILE $HOME/secureline-output/cloud_result.json
      - aws s3 cp s3://$ARTIFACT_BUCKET/secureline-output/${GitHubRepo}/$SCAN_NAME/DASTScanResults/ $HOME/secureline-output/ --recursive
      - aws s3 cp s3://$ARTIFACT_BUCKET/secureline-output/${GitHubRepo}/$SCAN_NAME/OS_CISComplianceResults/ $HOME/secureline-output/ --recursive
      - audit_file=$(ls $HOME/secureline-output/audit_ip-*-CIS-UBUNTU22_*.json | head -n 1)
      - if [ -f "$audit_file" ]; then
           ip_address=$(echo "$audit_file" | awk -F'[_-]' '{print $3"."$4"."$5"."$6}');
           new_name="CIS_${ip_address}_Ubuntu22_cis_audit.json";
           mv "$audit_file" "$HOME/secureline-output/$new_name";
        fi
      - ls -lhtr $HOME/secureline-output/
      - sudo apt install postgresql-client jq -y
      - |
        export POSTGRES_PORT=5432
        export POSTGRES_DBNAME="testing"
        export POSTGRES_HOST=$(aws ssm get-parameter --name /devsecops/POSTGRES_HOST --with-decryption --query "Parameter.Value" --output text)
        export POSTGRES_USER=$(aws ssm get-parameter --name /devsecops/POSTGRES_USER --with-decryption --query "Parameter.Value" --output text)
        export POSTGRES_PASSWORD=$(aws ssm get-parameter --name /devsecops/POSTGRES_PASSWORD --with-decryption --query "Parameter.Value" --output text)
        echo $POSTGRES_PASSWORD
      - |
        jq --arg user "$POSTGRES_USER" \
           --arg pass "$POSTGRES_PASSWORD" \
           --arg host "$POSTGRES_HOST" \
           --arg port "$POSTGRES_PORT" \
           --arg dbname "$POSTGRES_DBNAME" \
           '.pg_conn_params.user = $user |
            .pg_conn_params.password = $pass |
            .pg_conn_params.host = $host |
            .pg_conn_params.port = ($port | tonumber) |
            .pg_conn_params.dbname = $dbname' $(pwd)/securitytoolsparser/config.json > updated_config.json
      - mv updated_config.json $(pwd)/securitytoolsparser/config.json
      - cat $(pwd)/securitytoolsparser/config.json
  build:
    commands:
      - cd $(pwd)/securitytoolsparser/
      - pip install -r requirements.txt
      - export PYTHONPATH=/root/.pyenv/versions/3.9.17/lib/python3.9/site-packages
      - PGPASSWORD="$POSTGRES_PASSWORD" psql -h $POSTGRES_HOST -U $POSTGRES_USER -d $POSTGRES_DBNAME -p $POSTGRES_PORT -f securitytoolparser.sql
      - python3 insert_excel.py
        #      - ScanName=CD_${GitHubBranch}_$(date +'%Y%m%d-%H%M')
      - ScanName=$SCAN_NAME
      - ls -lhtr $HOME/secureline-output
      - python3 run_parser.py -t "ZAP Scan" -p "$HOME/secureline-output/zap-scan.xml" -m ${GitHubRepo} -A ${AppName} -B ${GitHubBranch} -bn "$ScanName"
      - python3 run_parser.py -t "UBUNTU20-CIS-Audit" -p "$HOME/secureline-output/CIS_172.31.47.131_Ubuntu22_cis_audit.json" -m ${GitHubRepo} -A ${AppName} -B ${GitHubBranch} -bn "$ScanName"
      - python3 run_parser.py -t "Kubescape Scanning_CD" -p "$HOME/secureline-output/kubescape_ns.xml" -m ${GitHubRepo} -A ${AppName} -B ${GitHubBranch} -bn "$ScanName"
      - python3 run_parser.py -t "Kubescape Scanning_CD" -p "$HOME/secureline-output/kubescape_cluster.xml" -m ${GitHubRepo} -A ${AppName} -B ${GitHubBranch} -bn "$ScanName"
      - python3 run_parser.py -t "AWS Cloud Security Suite" -p "$HOME/secureline-output/prowler-cloud-scan-result.ocsf.json" -m ${GitHubRepo} -A ${AppName} -B ${GitHubBranch} -bn "$ScanName"
        #      - python3 run_parser.py -t "CSS scan" -p "$HOME/secureline-output/cloud_result.json" -m ${GitHubRepo} -A ${AppName} -B ${GitHubBranch} -bn "$ScanName"
